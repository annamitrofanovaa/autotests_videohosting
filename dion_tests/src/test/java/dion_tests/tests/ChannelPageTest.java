package dion_tests.tests;

import dion_tests.pages.ChannelPage;
import dion_tests.utils.BaseTest;

import static com.codeborne.selenide.Selectors.byText;
import static com.codeborne.selenide.Selenide.$;
import java.util.Random;

import org.junit.jupiter.api.*;

import com.codeborne.selenide.Configuration;

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class ChannelPageTest extends BaseTest {
    private final ChannelPage channelPage = new ChannelPage();

    @Test
    @Disabled
    @Order(1)
    public void shouldOpenChannelPage() {

        channelPage.open("https://frontend-test.dev.dion.vc/video/channel/bbf7720c-09e2-4385-a0dd-3116c90af7a0");

        System.out.println("üåê [Test] ‚û§ –ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫...");
        channelPage.shouldHaveCorrectTitle("fdsdfsd");

        System.out.println("‚úÖ [Test] ‚û§ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞–Ω–∞–ª–∞ —Å–æ–≤–ø–∞–ª");*/
        String channelUrl = "https://frontend-test.dev.dion.vc/video/channel/bbf7720c-09e2-4385-a0dd-3116c90af7a0";
        channelPage.open(channelUrl);
        channelPage.checkChannelElements();
    }

    @Test
    @Disabled
    @Order(2)
    
    public void shouldSubscribeSuccessfully() {
        System.out.println("üöÄ [Test] ‚û§ –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è: shouldSubscribeSuccessfully");

        channelPage.open("https://frontend-test.dev.dion.vc/video/channel/bbf7720c-09e2-4385-a0dd-3116c90af7a0");


        System.out.println("üîî [Test] ‚û§ –ö–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç, –Ω–∞–∂–∏–º–∞–µ–º '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è'");
        channelPage.subscribeToChannel();

        System.out.println("‚úÖ [Test] ‚û§ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ");
    }

    @Test
    @Disabled
    @Order(3)
    public void shouldUnsubscribeSuccessfully() {
        System.out.println("üöÄ [Test] ‚û§ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –æ—Ç–ø–∏—Å–∫–∏");

        String channelUrl = "https://frontend-test.dev.dion.vc/video/channel/bbf7720c-09e2-4385-a0dd-3116c90af7a0";
        channelPage.open(channelUrl);

        channelPage.unsubscribeFromChannel();
    }
    @Test
    @Disabled
    @Order(4)
    @DisplayName("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
    public void shouldCreateChannelDraftSuccessfully() {
        System.out.println("[Test] –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è: shouldCreateChannelDraftSuccessfully");

        String channelName = "–¢–ï–°–¢" + new Random().nextInt(10000); // –Ω–∞–ø—Ä–∏–º–µ—Ä: –¢–ï–°–¢5678
        channelPage.createChannelDraft(channelName, "–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞");
        Configuration.timeout = 10000;
        System.out.println("[Test] –ß–µ—Ä–Ω–æ–≤–∏–∫ –∫–∞–Ω–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ —à–∞–≥ '–î–æ—Å—Ç—É–ø—ã –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã' –¥–æ—Å—Ç—É–ø–µ–Ω");
    }
    @Test
    @Disabled
    @Order(5)
    @DisplayName("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
    public void shouldEditChannelSuccessfully() {
        System.out.println("[Test] –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è: shouldEditChannelSuccessfully");

        String channelName = "–¢–ï–°–¢" + new Random().nextInt(10000);
        String channelDescription = "–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞";
        channelPage.createChannelDraft(channelName, channelDescription);
        Configuration.timeout = 10000;

        String bannerFilePath = "C:/Dion_tests/dion_tests/test_img/1.jpg"; // –ø—É—Ç—å –¥–æ –Ω–æ–≤–æ–π –æ–±–ª–æ–∂–∫–∏
        channelPage.editChannelAndChangeBanner(bannerFilePath);

        System.out.println("[Test] –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω");
    }
    @Test
    @Order(6)
    @DisplayName("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–ª–æ–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ")
    public void shouldSeeAdvertisementBlock() {
        System.out.println("[Test] –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–ª–æ–∫–∞ —Ä–µ–∫–ª–∞–º—ã");

        String channelUrl = "https://frontend-video-test.dev.dion.vc/video/channel/854a0dfd-23ab-43e5-8508-ec1b29b0de58";
        channelPage.open(channelUrl);

        channelPage.verifyAdvertisementBlockVisible();

        System.out.println("[Test] –ë–ª–æ–∫ —Ä–µ–∫–ª–∞–º—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω");
    }
    
}
